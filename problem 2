#(a)
import qiskit
import numpy
import numpy as np
from qiskit import *
from qiskit.visualization import plot_histogram, plot_bloch_vector , plot_bloch_multivector
from math import sqrt, pi
from qiskit import QuantumCircuit, execute, Aer, assemble
from numpy.random import randint
q = QuantumRegister(4)
c = ClassicalRegister(4)
circuit = QuantumCircuit(q,c)
circuit.initialize((1/6,1/sqrt(18),1/sqrt(12),1/sqrt(9),1/sqrt(36/5),1/sqrt(6),1/sqrt(36/7),1/sqrt(36/8),0,0,0,0,0,0,0,0))
circuit.x(q[0])
circuit.x(q[3])
circuit.h(q[3])
circuit.mct(list(range(3)),q[3])
circuit.x(q[0])
#circuit.measure(q,c)
circuit.draw(output = 'mpl')
simulator = Aer.get_backend('statevector_simulator')
job = execute(circuit, simulator)
result = job.result()
statevector = result.get_statevector()
print(statevector)
